############################################
#
# Buildout Configuration File for Plone
# -------------------------------------
#
# ALWAYS back up all Plone/Zope data and components
# before changing configuration.
#
# Running "bin/buildout" will update your installation,
# installing missing components as necessary.
#
# This will update the add-on products you've added in the eggs= lines.
# This will not, however, upgrade Plone itself (or anything else you've
# pinned with a version specification). To upgrade Plone itself, see the
# comments in "Plone Component Versions".
#
# Tutorial instructions for using zc.buildout for
# configuration management are available at:
# http://plone.org/documentation/tutorial/buildout
# Full details at http://pypi.python.org/pypi/zc.buildout
#
############################################

[buildout]
############################################
# Plone Component Versions
# ------------------------
# This version of the Unified Installer has the components of Plone 4
# preloaded so that it can install without an Internet connection.
# If you want to update, uncomment the "http://..." line below,
# edit it to point to the current version URL, comment out the
# "versions.cfg" line and run "bin/buildout" while attached to the
# Internet. Generally, you only want to do that as part of a planned migration.
# Note that if you are updating components, you should also check the versions
# section at the end of this file, since recipes or components other than
# those of Zope and Plone may need updating at the same time.
#
extends =
    base.cfg
    versions.cfg
	services-upgrading.stage.cfg
#    http://dist.plone.org/release/4.3.3-pending/versions.cfg

# If you change your Plone version, you'll also need to update
# the repository link below.
find-links +=
    http://dist.plone.org/release/4.3.3-pending

# If you try to start Zope as root, it will change user id to run as
# the effective user specified here. This user id must own the var directory
# of your buildout.
effective-user = plone_daemon
# This user will own the rest of the installation, and should be used to
# run buildout.
buildout-user = plone_buildout
# A flag to tell the Unified Installer whether or not to document sudo use.
need-sudo = yes

############################################
# Eggs
# ----
# Add an indented line to the eggs section for any Python
# eggs or packages you wish to include in your Plone instance.
#
# Note that versions may be specified here or in the [versions]
# section below. You should always specify versions that you know
# are compatible with the Plone release and at an acceptable
# development level.
#
# If you update to a later version of Plone, remove the hotfix.
#
eggs =
    Plone
    Pillow

############################################
# ZCML Slugs
# ----------
# Some eggs need ZCML slugs to tell Zope to
# use them. This is increasingly rare.
zcml =
#    plone.reload

############################################
# Development Eggs
# ----------------
# You can use paster to create "development eggs" to
# develop new products/themes. Put these in the src/
# directory.
# You will also need to add the egg names in the
# eggs section above, and may also need to add them
# to the zcml section.
#
# Provide the *paths* to the eggs you are developing here:
develop =
#    src/my.package

############################################
# var Directory
# -------------
# Sets the target directory for the "var" components of the install such as
# database and log files.
#
var-dir=${buildout:directory}/var

############################################
# Backup Directory
# ----------------
# Sets the target directory for the bin/backup and bin/snapshotbackup
# commands. Default is inside this project's var directory, but ideally
# this should be on a separate volume or backup server.
#
backups-dir=${buildout:var-dir}

############################################
# Initial User
# ------------
# This is the user id and password that will be used to create the initial
# user id that will allow you to log in and create a Plone site. This only
# sets the initial password; it will not allow you to change an already
# existing password. If you change the admin password via the web interface,
# the one below will no longer be valid.
# If you find yourself locked out of your Zope/Python installation, you may
# add an emergency user via "bin/plonectl adduser".
user=admin:tbbUOeDgGy9z

############################################
# Debug Options
# -------------
# Start Zope/Plone instances in "fg" mode to turn on debug mode;
# this will dramatically slow Plone.
#
# Add-on developers should turn deprecation warnings on
deprecation-warnings = off
# change verbose-security to "on" for useful security errors while developing
verbose-security = off

############################################
# Parts Specification
#--------------------
# Specifies the components that should be included in the buildout.
# Most are defined in the base.cfg extension; you may add your
# own if you need them at the end of this file.
parts =
    zeoserver
    client1
    client2
	client3
	client4
	client5
	client6
	client7
	client8
	client9
    backup
    zopepy
    unifiedinstaller
    precompiler
#    setpermissions
	haproxy
	supervisor
	varnish-build
	varnish

############################################
# Major Parts
# ----------------------
# These common parts make use of sane base settings from
# base.cfg. To customize a part, just add whatever options
# you need. Read base.cfg for common settings.

[zeoserver]
<= zeoserver_base
recipe = plone.recipe.zeoserver
zeo-address = 127.0.0.1:9080

[client1]
<= client_base
recipe = plone.recipe.zope2instance
zeo-address = ${zeoserver:zeo-address}
http-address = 9081
zope-conf-additional = 
	extensions ${buildout:directory}/Extensions

[client2]
<= client_base
recipe = plone.recipe.zope2instance
zeo-address = ${zeoserver:zeo-address}
http-address = 9082
zope-conf-additional =
        extensions ${buildout:directory}/Extensions
	<clock-server>
		method /NewTeylers/adlib_sync_manager
		period 60
		user admin
		password ${user:password}
		host localhost
	</clock-server>

[client3]
<= client_base
recipe = plone.recipe.zope2instance
zeo-address = ${zeoserver:zeo-address}
http-address = 9083
zope-conf-additional =
        extensions ${buildout:directory}/Extensions


[client4]
<= client_base
recipe = plone.recipe.zope2instance
zeo-address = ${zeoserver:zeo-address}
http-address = 9084
zope-conf-additional =
        extensions ${buildout:directory}/Extensions

[client5]
<= client_base
recipe = plone.recipe.zope2instance
zeo-address = ${zeoserver:zeo-address}
http-address = 9085
zope-conf-additional =
        extensions ${buildout:directory}/Extensions

[client6]
<= client_base
recipe = plone.recipe.zope2instance
zeo-address = ${zeoserver:zeo-address}
http-address = 9086
zope-conf-additional =
        extensions ${buildout:directory}/Extensions

[client7]
<= client_base
recipe = plone.recipe.zope2instance
zeo-address = ${zeoserver:zeo-address}
http-address = 9087
zope-conf-additional =
        extensions ${buildout:directory}/Extensions

[client8]
<= client_base
recipe = plone.recipe.zope2instance
zeo-address = ${zeoserver:zeo-address}
http-address = 9088
zope-conf-additional =
        extensions ${buildout:directory}/Extensions

[client9]
<= client_base
recipe = plone.recipe.zope2instance
zeo-address = ${zeoserver:zeo-address}
http-address = 9089
zope-conf-additional =
        extensions ${buildout:directory}/Extensions

[haproxy]
recipe = plone.recipe.haproxy
target = linux2628

[varnish-build]
recipe = zc.recipe.cmmi
url    = ${varnish:download-url}

[varnish]
recipe = plone.recipe.varnish:instance
daemon = ${buildout:directory}/parts/varnish-build/sbin/varnishd
bind   = 127.0.0.1:9002
backends = 127.0.0.1:9000
cache-size = 2048M
mode       = foreground

[supervisor]
recipe = collective.recipe.supervisor
port   = 9001
user     = admin
password = ${user:password}
serverurl = http://127.0.0.1:9001
programs  =
    10 zeo       ${zeoserver:location}/bin/runzeo                true ${users:zope}
    20 client1   ${buildout:directory}/bin/client1 [console]
    20 client2   ${buildout:directory}/bin/client2 [console]
    20 client3   ${buildout:directory}/bin/client3 [console]
    20 client4   ${buildout:directory}/bin/client4 [console]
    20 client5   ${buildout:directory}/bin/client5 [console]
    20 client6   ${buildout:directory}/bin/client6 [console]
    20 client7   ${buildout:directory}/bin/client7 [console]
    20 client8   ${buildout:directory}/bin/client8 [console]
    20 client9   ${buildout:directory}/bin/client9 [console]
    40 balancer  ${buildout:directory}/bin/haproxy [-f /var/www/teylers/conf/haproxy_teylers.conf -db ]
    30 cache	 ${buildout:directory}/bin/varnish

[users]
balancer = root
zope = root
supervisor = root
daemon = plone_daemon

############################################
# Versions Specification
# ----------------------
# Version information supplied here will "pin" Python packages to a particular
# version number, even when you use the "newest" flag running buildout.
# Specifying versions for all packages is a good idea and can prevent
# accidental changes when you add new packages to your buildout.
# Note that versions specified here will override those specified earlier
# in the configuration, including those from the Plone and Zope version
# config files.
#
[versions]
setuptools = 0.7.2
zc.buildout = 2.2.1
ZopeSkel = 2.21.2
Cheetah = 2.2.1
Products.DocFinderTab = 1.0.5
buildout.sanitycheck = 1.0b1
collective.recipe.backup = 2.17
plone.recipe.unifiedinstaller = 4.3.1
zopeskel.dexterity = 1.5.4.1
zopeskel.diazotheme = 1.1
